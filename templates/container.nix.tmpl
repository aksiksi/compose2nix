virtualisation.oci-containers.containers."{{.Name}}" = {
  image = "{{.Image}}";

  {{- if .Environment}}
  environment = {
    {{- range $k, $v := .Environment}}
    "{{$k}}" = "{{escapeNixString $v}}";
    {{- end}}
  };
  {{- end}}

  {{- if .EnvFiles}}
  environmentFiles = [
    {{- range .EnvFiles}}
    "{{.}}"
    {{- end}}
  ];
  {{- end}}

  {{- if .Volumes}}
  volumes = [
    {{- range $k, $v := .Volumes}}
    "{{$v}}"
    {{- end}}
  ];
  {{- end}}

  {{- if .Ports}}
  ports = [
    {{- range .Ports}}
    "{{.}}"
    {{- end}}
  ];
  {{- end}}

  {{- if .Command}}
  cmd = {{toNixList .Command}};
  {{- end}}

  {{- if .Labels}}
  labels = {
    {{- range $k, $v := .Labels}}
    "{{$k}}" = "{{escapeNixString $v}}";
    {{- end}}
  };
  {{- end}}

  {{- if .DependsOn}}
  dependsOn = [
    {{- range .DependsOn}}
    "{{.}}"
    {{- end}}
  ];
  {{- end}}

  {{- if .User}}
  user = "{{.User}}";
  {{- end}}

  {{- if .LogDriver}}
  log-driver = "{{.LogDriver}}";
  {{- end}}

  {{- if not .AutoStart}}
  autoStart = false;
  {{- end}}

  {{- if .ExtraOptions}}
  extraOptions = [
    {{- range .ExtraOptions}}
    "{{escapeNixString .}}"
    {{- end}}
  ];
  {{- end}}
};
systemd.services."{{.Runtime}}-{{.Name}}" = {
  {{- if .SystemdConfig.Service}}
  serviceConfig = {
    {{- range $k, $v := .SystemdConfig.Service.Options}}
    {{$k}} = lib.mkOverride 90 {{toNixValue $v}};
    {{- end}}
  };
  {{- end}}
  {{- if .SystemdConfig.StartLimitBurst}}
  startLimitBurst = {{derefInt .SystemdConfig.StartLimitBurst}};
  {{- end}}
  {{- if .SystemdConfig.Unit}}
  {{- if .SystemdConfig.Unit.Options}}
  unitConfig = {
    {{- range $k, $v := .SystemdConfig.Unit.Options}}
    {{$k}} = lib.mkOverride 500 {{toNixValue $v}};
    {{- end}}
  };
  {{- end}}
  {{- if .SystemdConfig.Unit.After}}
  after = [
    {{- range .SystemdConfig.Unit.After}}
    "{{.}}"
    {{- end}}
  ];
  {{- end}}
  {{- if .SystemdConfig.Unit.Requires}}
  requires = [
    {{- range .SystemdConfig.Unit.Requires}}
    "{{.}}"
    {{- end}}
  ];
  {{- end}}
  {{- if .SystemdConfig.Unit.PartOf}}
  partOf = [
    {{- range .SystemdConfig.Unit.PartOf}}
    "{{.}}"
    {{- end}}
  ];
  {{- end}}
  {{- if .SystemdConfig.Unit.UpheldBy}}
  upheldBy = [
    {{- range .SystemdConfig.Unit.UpheldBy}}
    "{{.}}"
    {{- end}}
  ];
  {{- end}}
  {{- if .SystemdConfig.Unit.WantedBy}}
  wantedBy = [
    {{- range .SystemdConfig.Unit.WantedBy}}
    "{{.}}"
    {{- end}}
  ];
  {{- end}}
  {{- if .SystemdConfig.Unit.RequiresMountsFor}}
  unitConfig.RequiresMountsFor = [
    {{- range .SystemdConfig.Unit.RequiresMountsFor}}
    "{{.}}"
    {{- end}}
  ];
  {{- end}}
  {{- end}}
};