name: "myproject"
services:
  service-a:
    image: docker.io/library/nginx:stable-alpine-slim
    environment:
      TZ: ${TIMEZONE}
      test.key: ABC
    env_file:
      - path: /tmp/test.env
        required: false
    volumes:
      - /var/volumes/service-a:/config
      - storage:/storage
    deploy:
      resources:
        reservations:
          cpus: "0.5"
    labels:
      - 'compose2nix.systemd.service.Restart=no'
      - "compose2nix.systemd.service.RuntimeMaxSec=360"
      - "compose2nix.systemd.unit.Description=This is the service-a container!"
      - "escape-me=\"hello\""
    restart: unless-stopped
  service-b:
    image: docker.io/library/nginx:stable-alpine-slim
    container_name: service-b
    environment:
      TZ: ${TIMEZONE}
    volumes:
      - /var/volumes/service-b:/config
      - storage:/storage
      - books:/books
    labels:
      - "compose2nix.systemd.unit.AllowIsolate=no"
      - "compose2nix.systemd.service.RuntimeMaxSec=360"
    depends_on:
      - service-a
    healthcheck:
      test: echo abc && true
    networks:
      something:
        ipv4_address: 192.168.8.20
    restart: on-failure:3
  no-restart:
    image: docker.io/library/nginx:stable-alpine-slim

networks:
  something:
    ipam:
      config:
        - subnet: 192.168.8.0/24
          gateway: 192.168.8.1
    labels:
      - "test-label=okay"
      - "escape-me=''hello''"

volumes:
  storage:
    name: storage
    driver_opts:
      type: none
      device: /mnt/media
      o: bind
    labels:
      - "escape-me=''hello''"
  books:
    driver_opts:
      type: none
      device: /mnt/media/Books
      o: bind

